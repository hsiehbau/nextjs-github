{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport axios from 'axios';\nvar userInitialState = {};\nvar LOGOUT = 'LOGOUT'; // 纯函数\n// 返回新对象 （组件更新判断）\n// 通过 combineReducers 进行合并\n\nfunction userReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : userInitialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOGOUT:\n      return {};\n\n    default:\n      return state;\n  }\n}\n/**\n * {\n *  user: {}\n * }\n */\n\n\nvar allReducers = combineReducers({\n  user: userReducer\n}); // action creators\n\nexport function logout() {\n  return function (dispatch) {\n    axios.post('/logout').then(function (resp) {\n      if (resp.status === 200) {\n        dispatch({\n          type: LOGOUT\n        });\n      } else {\n        console.log('logout failed, ', resp);\n      }\n    })[\"catch\"](function (err) {\n      console.log('logout failed, ', err);\n    });\n  };\n}\nexport default function initializeStore(state) {\n  var store = createStore(allReducers, _Object$assign({}, {\n    user: userInitialState\n  }, state), composeWithDevTools(applyMiddleware(ReduxThunk)));\n  return store;\n}","map":{"version":3,"sources":["D:/GitHub/nextjs-project/store/index.js"],"names":["createStore","combineReducers","applyMiddleware","ReduxThunk","composeWithDevTools","axios","userInitialState","LOGOUT","userReducer","state","action","type","allReducers","user","logout","dispatch","post","then","resp","status","console","log","err","initializeStore","store"],"mappings":";AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAMC,gBAAgB,GAAG,EAAzB;AAEA,IAAMC,MAAM,GAAG,QAAf,C,CAEA;AACA;AACA;;AAEA,SAASC,WAAT,GAAuD;AAAA,MAAlCC,KAAkC,uEAA1BH,gBAA0B;AAAA,MAARI,MAAQ;;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKJ,MAAL;AACE,aAAO,EAAP;;AACF;AACE,aAAOE,KAAP;AAJJ;AAMD;AAED;;;;;;;AAKA,IAAMG,WAAW,GAAGX,eAAe,CAAC;AAClCY,EAAAA,IAAI,EAAEL;AAD4B,CAAD,CAAnC,C,CAIA;;AAEA,OAAO,SAASM,MAAT,GAAkB;AACvB,SAAO,UAACC,QAAD,EAAc;AACnBV,IAAAA,KAAK,CACFW,IADH,CACQ,SADR,EAEGC,IAFH,CAEQ,UAACC,IAAD,EAAU;AACd,UAAIA,IAAI,CAACC,MAAL,KAAgB,GAApB,EAAyB;AACvBJ,QAAAA,QAAQ,CAAC;AACPJ,UAAAA,IAAI,EAAEJ;AADC,SAAD,CAAR;AAGD,OAJD,MAIO;AACLa,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BH,IAA/B;AACD;AACF,KAVH,WAWS,UAACI,GAAD,EAAS;AACdF,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BC,GAA/B;AACD,KAbH;AAcD,GAfD;AAgBD;AAED,eAAe,SAASC,eAAT,CAAyBd,KAAzB,EAAgC;AAC7C,MAAMe,KAAK,GAAGxB,WAAW,CACvBY,WADuB,EAEvB,eACE,EADF,EAEE;AACEC,IAAAA,IAAI,EAAEP;AADR,GAFF,EAKEG,KALF,CAFuB,EASvBL,mBAAmB,CAACF,eAAe,CAACC,UAAD,CAAhB,CATI,CAAzB;AAYA,SAAOqB,KAAP;AACD","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport ReduxThunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport axios from 'axios'\n\nconst userInitialState = {}\n\nconst LOGOUT = 'LOGOUT'\n\n// 纯函数\n// 返回新对象 （组件更新判断）\n// 通过 combineReducers 进行合并\n\nfunction userReducer(state = userInitialState, action) {\n  switch (action.type) {\n    case LOGOUT:\n      return {}\n    default:\n      return state\n  }\n}\n\n/**\n * {\n *  user: {}\n * }\n */\nconst allReducers = combineReducers({\n  user: userReducer,\n})\n\n// action creators\n\nexport function logout() {\n  return (dispatch) => {\n    axios\n      .post('/logout')\n      .then((resp) => {\n        if (resp.status === 200) {\n          dispatch({\n            type: LOGOUT,\n          })\n        } else {\n          console.log('logout failed, ', resp)\n        }\n      })\n      .catch((err) => {\n        console.log('logout failed, ', err)\n      })\n  }\n}\n\nexport default function initializeStore(state) {\n  const store = createStore(\n    allReducers,\n    Object.assign(\n      {},\n      {\n        user: userInitialState,\n      },\n      state\n    ),\n    composeWithDevTools(applyMiddleware(ReduxThunk))\n  )\n\n  return store\n}\n"]},"metadata":{},"sourceType":"module"}