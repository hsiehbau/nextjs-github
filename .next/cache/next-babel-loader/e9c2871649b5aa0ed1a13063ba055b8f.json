{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// 本文件是用来修改nextjs默认环境的地方，每个页面都回去渲染这个组件，这是个渲染组件，\n// import App from \"next/app\";\nimport App, { Container } from \"next/app\";\nimport \"antd/dist/antd.css\";\nimport { Provider } from \"react-redux\";\nimport Router from \"next/router\";\nimport Link from \"next/link\";\nimport Layout from \"../components/Layout\";\nimport MyContext from \"../lib/my-context\";\nimport WithReduxApp from \"../lib/with-redux\";\nimport PageLoading from \"../components/PageLoading\";\n\nclass MyApp extends App {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      context: \"value\",\n      loading: false\n    });\n\n    _defineProperty(this, \"startLoading\", () => {\n      this.setState({\n        loading: true\n      });\n    });\n\n    _defineProperty(this, \"stopLoading\", () => {\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  componentDidMount() {\n    Router.events.on(\"routeChangeStart\", this.startLoading);\n    Router.events.on(\"routeChangeComplete\", this.stopLoading);\n    Router.events.on(\"routeChangeError\", this.stopLoading);\n  }\n\n  componentWillUnmount() {\n    Router.events.off(\"routeChangeStart\", this.startLoading);\n    Router.events.off(\"routeChangeComplete\", this.stopLoading);\n    Router.events.off(\"routeChangeError\", this.stopLoading);\n  }\n\n  static async getInitialProps(ctx) {\n    const {\n      Component\n    } = ctx;\n    console.log(\"app init\");\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n\n    return {\n      pageProps\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      reduxStore\n    } = this.props; // console.log(Component, pageProps);\n\n    return __jsx(Provider, {\n      store: reduxStore\n    }, __jsx(PageLoading, null), __jsx(Layout, null, this.state.loading ? __jsx(PageLoading, null) : null, __jsx(Layout, null, __jsx(Link, {\n      href: \"/\"\n    }, __jsx(\"a\", null, \"index\")), __jsx(Link, {\n      href: \"/detail\"\n    }, __jsx(\"a\", null, \"detail\")), __jsx(Component, pageProps))));\n  }\n\n}\n\nexport default WithReduxApp(MyApp);","map":{"version":3,"sources":["D:/GitHub/nextjs-project/pages/_app.js"],"names":["App","Container","Provider","Router","Link","Layout","MyContext","WithReduxApp","PageLoading","MyApp","context","loading","setState","componentDidMount","events","on","startLoading","stopLoading","componentWillUnmount","off","getInitialProps","ctx","Component","console","log","pageProps","render","reduxStore","props","state"],"mappings":";;;;;AAAA;AACA;AACA,OAAOA,GAAP,IAAcC,SAAd,QAA+B,UAA/B;AACA,OAAO,oBAAP;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;AACA,MAAMC,KAAN,SAAoBT,GAApB,CAAwB;AAAA;AAAA;;AAAA,mCACd;AACNU,MAAAA,OAAO,EAAE,OADH;AAENC,MAAAA,OAAO,EAAE;AAFH,KADc;;AAAA,0CAMP,MAAM;AACnB,WAAKC,QAAL,CAAc;AACZD,QAAAA,OAAO,EAAE;AADG,OAAd;AAGD,KAVqB;;AAAA,yCAYR,MAAM;AAClB,WAAKC,QAAL,CAAc;AACZD,QAAAA,OAAO,EAAE;AADG,OAAd;AAGD,KAhBqB;AAAA;;AAkBtBE,EAAAA,iBAAiB,GAAG;AAClBV,IAAAA,MAAM,CAACW,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqC,KAAKC,YAA1C;AACAb,IAAAA,MAAM,CAACW,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwC,KAAKE,WAA7C;AACAd,IAAAA,MAAM,CAACW,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqC,KAAKE,WAA1C;AACD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrBf,IAAAA,MAAM,CAACW,MAAP,CAAcK,GAAd,CAAkB,kBAAlB,EAAsC,KAAKH,YAA3C;AACAb,IAAAA,MAAM,CAACW,MAAP,CAAcK,GAAd,CAAkB,qBAAlB,EAAyC,KAAKF,WAA9C;AACAd,IAAAA,MAAM,CAACW,MAAP,CAAcK,GAAd,CAAkB,kBAAlB,EAAsC,KAAKF,WAA3C;AACD;;AAED,eAAaG,eAAb,CAA6BC,GAA7B,EAAkC;AAChC,UAAM;AAAEC,MAAAA;AAAF,QAAgBD,GAAtB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AAEA,QAAIC,SAAS,GAAG,EAAhB;;AAEA,QAAIH,SAAS,CAACF,eAAd,EAA+B;AAC7BK,MAAAA,SAAS,GAAG,MAAMH,SAAS,CAACF,eAAV,CAA0BC,GAA1B,CAAlB;AACD;;AAED,WAAO;AAAEI,MAAAA;AAAF,KAAP;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEJ,MAAAA,SAAF;AAAaG,MAAAA,SAAb;AAAwBE,MAAAA;AAAxB,QAAuC,KAAKC,KAAlD,CADO,CAEP;;AACA,WACE,MAAC,QAAD;AAAU,MAAA,KAAK,EAAED;AAAjB,OAEE,MAAC,WAAD,OAFF,EAGE,MAAC,MAAD,QACG,KAAKE,KAAL,CAAWlB,OAAX,GAAqB,MAAC,WAAD,OAArB,GAAuC,IAD1C,EAEE,MAAC,MAAD,QACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC;AAAX,OACE,yBADF,CADF,EAIE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC;AAAX,OACE,0BADF,CAJF,EAOE,MAAC,SAAD,EAAec,SAAf,CAPF,CAFF,CAHF,CADF;AAkBD;;AA/DqB;;AAiExB,eAAelB,YAAY,CAACE,KAAD,CAA3B","sourcesContent":["// 本文件是用来修改nextjs默认环境的地方，每个页面都回去渲染这个组件，这是个渲染组件，\n// import App from \"next/app\";\nimport App, { Container } from \"next/app\";\nimport \"antd/dist/antd.css\";\nimport { Provider } from \"react-redux\";\nimport Router from \"next/router\";\nimport Link from \"next/link\";\n\nimport Layout from \"../components/Layout\";\nimport MyContext from \"../lib/my-context\";\nimport WithReduxApp from \"../lib/with-redux\";\nimport PageLoading from \"../components/PageLoading\";\nclass MyApp extends App {\n  state = {\n    context: \"value\",\n    loading: false\n  };\n\n  startLoading = () => {\n    this.setState({\n      loading: true\n    });\n  };\n\n  stopLoading = () => {\n    this.setState({\n      loading: false\n    });\n  };\n\n  componentDidMount() {\n    Router.events.on(\"routeChangeStart\", this.startLoading);\n    Router.events.on(\"routeChangeComplete\", this.stopLoading);\n    Router.events.on(\"routeChangeError\", this.stopLoading);\n  }\n\n  componentWillUnmount() {\n    Router.events.off(\"routeChangeStart\", this.startLoading);\n    Router.events.off(\"routeChangeComplete\", this.stopLoading);\n    Router.events.off(\"routeChangeError\", this.stopLoading);\n  }\n\n  static async getInitialProps(ctx) {\n    const { Component } = ctx;\n    console.log(\"app init\");\n\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n\n    return { pageProps };\n  }\n  render() {\n    const { Component, pageProps, reduxStore } = this.props;\n    // console.log(Component, pageProps);\n    return (\n      <Provider store={reduxStore}>\n        {/* 因为是一个全局的遮罩层，是fixed的的组件 ，放layout上面*/}\n        <PageLoading />\n        <Layout>\n          {this.state.loading ? <PageLoading /> : null}\n          <Layout>\n            <Link href=\"/\">\n              <a>index</a>\n            </Link>\n            <Link href=\"/detail\">\n              <a>detail</a>\n            </Link>\n            <Component {...pageProps} />\n          </Layout>\n        </Layout>\n      </Provider>\n    );\n  }\n}\nexport default WithReduxApp(MyApp);\n"]},"metadata":{},"sourceType":"module"}