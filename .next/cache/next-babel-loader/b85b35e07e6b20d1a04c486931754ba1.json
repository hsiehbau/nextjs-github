{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport Router from \"next/router\";\nimport { connect } from \"react-redux\";\nimport getConfig from \"next/config\";\n\nvar _getConfig = getConfig(),\n    publicRuntimeConfig = _getConfig.publicRuntimeConfig;\n\nvar events = [\"routeChangeStart\", \"routeChangeComplete\", \"routeChangeError\", \"beforeHistoryChange\", \"hashChangeStart\", \"hashChangeComplete\"];\n\nfunction makeEvent(type) {\n  return function () {\n    var _console;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    (_console = console).log.apply(_console, [type].concat(args));\n  };\n}\n\nevents.forEach(function (event) {\n  Router.events.on(event, makeEvent(event));\n}); // link里的as和router.push中的第二个参数是叫url masking\n\nvar Index = function Index(_ref) {\n  var counter = _ref.counter,\n      username = _ref.username,\n      add = _ref.add,\n      rename = _ref.rename;\n\n  function goB() {\n    Router.push({\n      pathname: \"/test/b\",\n      query: {\n        id: 2\n      }\n    }, \"test/b/2\");\n  } // 第二个传入一个空数组，因为希望触发一次\n\n\n  useEffect(function () {\n    axios.get(\"/api/user/info\").then(function (resp) {\n      console.log(resp);\n    });\n  }, []);\n  return __jsx(React.Fragment, null);\n};\n\nIndex.getInitialProps = function _callee(_ref2) {\n  var reduxStore;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          reduxStore = _ref2.reduxStore;\n          return _context.abrupt(\"return\", {});\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default connect(function mapStateToProps(state) {\n  return {\n    username: state.user.username\n  };\n}, function mapDispatchToProps(dispatch) {\n  return {\n    add: function add(num) {\n      return dispatch({\n        type: \"ADD\",\n        num: num\n      });\n    },\n    rename: function rename(name) {\n      return dispatch({\n        type: \"UPDATE_USERNAME\",\n        name: name\n      });\n    }\n  };\n})(Index);","map":{"version":3,"sources":["D:/GitHub/nextjs-project/pages/index.js"],"names":["useEffect","axios","Router","connect","getConfig","publicRuntimeConfig","events","makeEvent","type","args","console","log","forEach","event","on","Index","counter","username","add","rename","goB","push","pathname","query","id","get","then","resp","getInitialProps","reduxStore","mapStateToProps","state","user","mapDispatchToProps","dispatch","num","name"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;iBAEgCA,SAAS,E;IAAjCC,mB,cAAAA,mB;;AAER,IAAMC,MAAM,GAAG,CACb,kBADa,EAEb,qBAFa,EAGb,kBAHa,EAIb,qBAJa,EAKb,iBALa,EAMb,oBANa,CAAf;;AASA,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;AACvB,SAAO,YAAa;AAAA;;AAAA,sCAATC,IAAS;AAATA,MAAAA,IAAS;AAAA;;AAClB,gBAAAC,OAAO,EAACC,GAAR,kBAAYH,IAAZ,SAAqBC,IAArB;AACD,GAFD;AAGD;;AAEDH,MAAM,CAACM,OAAP,CAAe,UAAAC,KAAK,EAAI;AACtBX,EAAAA,MAAM,CAACI,MAAP,CAAcQ,EAAd,CAAiBD,KAAjB,EAAwBN,SAAS,CAACM,KAAD,CAAjC;AACD,CAFD,E,CAIA;;AACA,IAAME,KAAK,GAAG,SAARA,KAAQ,OAAwC;AAAA,MAArCC,OAAqC,QAArCA,OAAqC;AAAA,MAA5BC,QAA4B,QAA5BA,QAA4B;AAAA,MAAlBC,GAAkB,QAAlBA,GAAkB;AAAA,MAAbC,MAAa,QAAbA,MAAa;;AACpD,WAASC,GAAT,GAAe;AACblB,IAAAA,MAAM,CAACmB,IAAP,CACE;AACEC,MAAAA,QAAQ,EAAE,SADZ;AAEEC,MAAAA,KAAK,EAAE;AACLC,QAAAA,EAAE,EAAE;AADC;AAFT,KADF,EAOE,UAPF;AASD,GAXmD,CAYpD;;;AACAxB,EAAAA,SAAS,CAAC,YAAM;AACdC,IAAAA,KAAK,CAACwB,GAAN,CAAU,gBAAV,EAA4BC,IAA5B,CAAiC,UAAAC,IAAI,EAAI;AACvCjB,MAAAA,OAAO,CAACC,GAAR,CAAYgB,IAAZ;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,SACE,2BADF;AASD,CA5BD;;AA8BAZ,KAAK,CAACa,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,UAAT,SAASA,UAAT;AAAA,2CAEf,EAFe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAKA,eAAe1B,OAAO,CACpB,SAAS2B,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLd,IAAAA,QAAQ,EAAEc,KAAK,CAACC,IAAN,CAAWf;AADhB,GAAP;AAGD,CALmB,EAMpB,SAASgB,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLhB,IAAAA,GAAG,EAAE,aAAAiB,GAAG;AAAA,aAAID,QAAQ,CAAC;AAAE1B,QAAAA,IAAI,EAAE,KAAR;AAAe2B,QAAAA,GAAG,EAAHA;AAAf,OAAD,CAAZ;AAAA,KADH;AAELhB,IAAAA,MAAM,EAAE,gBAAAiB,IAAI;AAAA,aAAIF,QAAQ,CAAC;AAAE1B,QAAAA,IAAI,EAAE,iBAAR;AAA2B4B,QAAAA,IAAI,EAAJA;AAA3B,OAAD,CAAZ;AAAA;AAFP,GAAP;AAID,CAXmB,CAAP,CAYbrB,KAZa,CAAf","sourcesContent":["import { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport Router from \"next/router\";\r\nimport { connect } from \"react-redux\";\r\nimport getConfig from \"next/config\";\r\n\r\nconst { publicRuntimeConfig } = getConfig();\r\n\r\nconst events = [\r\n  \"routeChangeStart\",\r\n  \"routeChangeComplete\",\r\n  \"routeChangeError\",\r\n  \"beforeHistoryChange\",\r\n  \"hashChangeStart\",\r\n  \"hashChangeComplete\"\r\n];\r\n\r\nfunction makeEvent(type) {\r\n  return (...args) => {\r\n    console.log(type, ...args);\r\n  };\r\n}\r\n\r\nevents.forEach(event => {\r\n  Router.events.on(event, makeEvent(event));\r\n});\r\n\r\n// link里的as和router.push中的第二个参数是叫url masking\r\nconst Index = ({ counter, username, add, rename }) => {\r\n  function goB() {\r\n    Router.push(\r\n      {\r\n        pathname: \"/test/b\",\r\n        query: {\r\n          id: 2\r\n        }\r\n      },\r\n      \"test/b/2\"\r\n    );\r\n  }\r\n  // 第二个传入一个空数组，因为希望触发一次\r\n  useEffect(() => {\r\n    axios.get(\"/api/user/info\").then(resp => {\r\n      console.log(resp);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {/* <h3>Count: {counter}</h3>\r\n      <h3>Username: {username}</h3>\r\n      <input value={username} onChange={e => rename(e.target.value)} />\r\n      <button onClick={() => add(counter)}>do add</button>\r\n      <a href={publicRuntimeConfig.OAUTH_URL}>去登录</a> */}\r\n    </>\r\n  );\r\n};\r\n\r\nIndex.getInitialProps = async ({ reduxStore }) => {\r\n  // reduxStore.dispatch(add(3));\r\n  return {};\r\n};\r\n\r\nexport default connect(\r\n  function mapStateToProps(state) {\r\n    return {\r\n      username: state.user.username\r\n    };\r\n  },\r\n  function mapDispatchToProps(dispatch) {\r\n    return {\r\n      add: num => dispatch({ type: \"ADD\", num }),\r\n      rename: name => dispatch({ type: \"UPDATE_USERNAME\", name })\r\n    };\r\n  }\r\n)(Index);\r\n"]},"metadata":{},"sourceType":"module"}