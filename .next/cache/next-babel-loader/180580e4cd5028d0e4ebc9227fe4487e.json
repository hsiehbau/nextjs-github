{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n// 本文件是用来修改nextjs默认环境的地方，每个页面都回去渲染这个组件，这是个渲染组件，\n// import App from \"next/app\";\nimport App, { Container } from \"next/app\";\nimport \"antd/dist/antd.css\";\n\nclass MyApp extends App {\n  render() {\n    const {\n      Component\n    } = this.props;\n    console.log(Component);\n    return __jsx(Container, null, __jsx(Component, null));\n  }\n\n}\n\nexport default MyApp; // import \"antd/dist/antd.css\";\n// import { Provider } from 'react-redux'\n// import Router from 'next/router'\n// import Link from 'next/link'\n// import Layout from '../components/Layout'\n// import PageLoading from '../components/PageLoading'\n// import withRedux from '../lib/with-redux'\n// class MyApp extends App {\n//   state = {\n//     context: 'value',\n//     loading: false,\n//   }\n//   startLoading = () => {\n//     this.setState({\n//       loading: true,\n//     })\n//   }\n//   stopLoading = () => {\n//     this.setState({\n//       loading: false,\n//     })\n//   }\n//   componentDidMount() {\n//     Router.events.on('routeChangeStart', this.startLoading)\n//     Router.events.on('routeChangeComplete', this.stopLoading)\n//     Router.events.on('routeChangeError', this.stopLoading)\n//   }\n//   componentWillUnmount() {\n//     Router.events.off('routeChangeStart', this.startLoading)\n//     Router.events.off('routeChangeComplete', this.stopLoading)\n//     Router.events.off('routeChangeError', this.stopLoading)\n//   }\n//   static async getInitialProps(ctx) {\n//     const { Component } = ctx\n//     console.log('app init')\n//     let pageProps = {}\n//     if (Component.getInitialProps) {\n//       pageProps = await Component.getInitialProps(ctx)\n//     }\n//     return { pageProps }\n//   }\n//   render() {\n//     const { Component, pageProps, reduxStore } = this.props\n//     return (\n//       <Container>\n//         <Provider store={reduxStore}>\n//           {this.state.loading ? <PageLoading /> : null}\n//           <Layout>\n//             <Component {...pageProps} />\n//           </Layout>\n//         </Provider>\n//       </Container>\n//     )\n//   }\n// }\n// export default withRedux(MyApp)","map":{"version":3,"sources":["D:/GitHub/nextjs-project/pages/_app.js"],"names":["App","Container","MyApp","render","Component","props","console","log"],"mappings":";;AAAA;AACA;AACA,OAAOA,GAAP,IAAcC,SAAd,QAA+B,UAA/B;AACA,OAAO,oBAAP;;AACA,MAAMC,KAAN,SAAoBF,GAApB,CAAwB;AACtBG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAgB,KAAKC,KAA3B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACA,WACE,MAAC,SAAD,QACE,MAAC,SAAD,OADF,CADF;AAKD;;AATqB;;AAWxB,eAAeF,KAAf,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// 本文件是用来修改nextjs默认环境的地方，每个页面都回去渲染这个组件，这是个渲染组件，\n// import App from \"next/app\";\nimport App, { Container } from \"next/app\";\nimport \"antd/dist/antd.css\";\nclass MyApp extends App {\n  render() {\n    const { Component } = this.props;\n    console.log(Component);\n    return (\n      <Container>\n        <Component />\n      </Container>\n    );\n  }\n}\nexport default MyApp;\n\n// import \"antd/dist/antd.css\";\n// import { Provider } from 'react-redux'\n// import Router from 'next/router'\n// import Link from 'next/link'\n\n// import Layout from '../components/Layout'\n// import PageLoading from '../components/PageLoading'\n\n// import withRedux from '../lib/with-redux'\n\n// class MyApp extends App {\n//   state = {\n//     context: 'value',\n//     loading: false,\n//   }\n\n//   startLoading = () => {\n//     this.setState({\n//       loading: true,\n//     })\n//   }\n\n//   stopLoading = () => {\n//     this.setState({\n//       loading: false,\n//     })\n//   }\n\n//   componentDidMount() {\n//     Router.events.on('routeChangeStart', this.startLoading)\n//     Router.events.on('routeChangeComplete', this.stopLoading)\n//     Router.events.on('routeChangeError', this.stopLoading)\n//   }\n\n//   componentWillUnmount() {\n//     Router.events.off('routeChangeStart', this.startLoading)\n//     Router.events.off('routeChangeComplete', this.stopLoading)\n//     Router.events.off('routeChangeError', this.stopLoading)\n//   }\n\n//   static async getInitialProps(ctx) {\n//     const { Component } = ctx\n//     console.log('app init')\n\n//     let pageProps = {}\n\n//     if (Component.getInitialProps) {\n//       pageProps = await Component.getInitialProps(ctx)\n//     }\n\n//     return { pageProps }\n//   }\n\n//   render() {\n//     const { Component, pageProps, reduxStore } = this.props\n\n//     return (\n//       <Container>\n//         <Provider store={reduxStore}>\n//           {this.state.loading ? <PageLoading /> : null}\n//           <Layout>\n//             <Component {...pageProps} />\n//           </Layout>\n//         </Provider>\n//       </Container>\n//     )\n//   }\n// }\n\n// export default withRedux(MyApp)\n"]},"metadata":{},"sourceType":"module"}