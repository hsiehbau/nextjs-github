{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport ReduxThunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nvar userInitialState = {};\n\nfunction userReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : userInitialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    default:\n      return state;\n  }\n}\n\nvar allReducers = combineReducers({\n  user: userReducer\n}); // 保证每次都是新的store\n\nexport default function initializeStore(state) {\n  var store = createStore(allReducers, _Object$assign({}, {\n    user: userInitialState\n  }, // 存进来的state优先级最高放到后面\n  state), composeWithDevTools(applyMiddleware(ReduxThunk)));\n  return store;\n}","map":{"version":3,"sources":["D:/GitHub/nextjs-project/store/store.js"],"names":["createStore","combineReducers","applyMiddleware","ReduxThunk","composeWithDevTools","userInitialState","userReducer","state","action","type","allReducers","user","initializeStore","store"],"mappings":";AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,IAAMC,gBAAgB,GAAG,EAAzB;;AAEA,SAASC,WAAT,GAAuD;AAAA,MAAlCC,KAAkC,uEAA1BF,gBAA0B;AAAA,MAARG,MAAQ;;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE;AACE,aAAOF,KAAP;AAFJ;AAID;;AAED,IAAMG,WAAW,GAAGT,eAAe,CAAC;AAClCU,EAAAA,IAAI,EAAEL;AAD4B,CAAD,CAAnC,C,CAIA;;AACA,eAAe,SAASM,eAAT,CAAyBL,KAAzB,EAAgC;AAC7C,MAAMM,KAAK,GAAGb,WAAW,CACvBU,WADuB,EAEvB,eACE,EADF,EAEE;AACEC,IAAAA,IAAI,EAAEN;AADR,GAFF,EAKE;AACAE,EAAAA,KANF,CAFuB,EAUvBH,mBAAmB,CAACF,eAAe,CAACC,UAAD,CAAhB,CAVI,CAAzB;AAYA,SAAOU,KAAP;AACD","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport ReduxThunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nconst userInitialState = {};\r\n\r\nfunction userReducer(state = userInitialState, action) {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst allReducers = combineReducers({\r\n  user: userReducer\r\n});\r\n\r\n// 保证每次都是新的store\r\nexport default function initializeStore(state) {\r\n  const store = createStore(\r\n    allReducers,\r\n    Object.assign(\r\n      {},\r\n      {\r\n        user: userInitialState\r\n      },\r\n      // 存进来的state优先级最高放到后面\r\n      state\r\n    ),\r\n    composeWithDevTools(applyMiddleware(ReduxThunk))\r\n  );\r\n  return store;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}