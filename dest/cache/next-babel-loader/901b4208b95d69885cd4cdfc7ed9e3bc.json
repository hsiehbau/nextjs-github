{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// import Comp from \"../components/comp\";\nimport { withRouter } from \"next/router\";\nimport Link from \"next/link\";\nimport styled from \"styled-components\";\nimport dynamic from \"next/dynamic\"; // import moment from \"moment\";\n// 异步加载组件，等到真正执行渲的时候才会加载\n\nvar Comp = dynamic(function () {\n  return import(\"../components/comp\");\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak(\"../components/comp\")];\n    },\n    modules: [\"../components/comp\"]\n  }\n});\nvar Title = styled.h1.withConfig({\n  displayName: \"a__Title\",\n  componentId: \"qiil1x-0\"\n})([\"color:green;font-size:23px;\"]);\nvar color = \"pink\";\n\nvar A = function A(_ref) {\n  var router = _ref.router,\n      name = _ref.name,\n      time = _ref.time;\n  return __jsx(React.Fragment, null, __jsx(Title, null, \"This is title \", time), __jsx(Comp, null), __jsx(Link, {\n    href: \"#aaa\"\n  }, __jsx(\"a\", {\n    className: \"jsx-477085967\" + \" \" + \"link\"\n  }, \"A\", router.query.id, \"\\xA0\", name)), __jsx(_JSXStyle, {\n    id: \"477085967\"\n  }, \"a.jsx-477085967{color:green;}.link.jsx-477085967{color:\".concat(color, \";}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkQ6XFxHaXRIdWJcXG5leHRqcy1wcm9qZWN0XFxwYWdlc1xcYS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF3QmdCLEFBR3FCLEFBR3VCLFlBRnJDLHVCQUdBIiwiZmlsZSI6IkQ6XFxHaXRIdWJcXG5leHRqcy1wcm9qZWN0XFxwYWdlc1xcYS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGltcG9ydCBDb21wIGZyb20gXCIuLi9jb21wb25lbnRzL2NvbXBcIjtcclxuaW1wb3J0IHsgd2l0aFJvdXRlciB9IGZyb20gXCJuZXh0L3JvdXRlclwiO1xyXG5pbXBvcnQgTGluayBmcm9tIFwibmV4dC9saW5rXCI7XHJcbmltcG9ydCBzdHlsZWQgZnJvbSBcInN0eWxlZC1jb21wb25lbnRzXCI7XHJcbmltcG9ydCBkeW5hbWljIGZyb20gXCJuZXh0L2R5bmFtaWNcIjtcclxuXHJcbi8vIGltcG9ydCBtb21lbnQgZnJvbSBcIm1vbWVudFwiO1xyXG4vLyDlvILmraXliqDovb3nu4Tku7bvvIznrYnliLDnnJ/mraPmiafooYzmuLLnmoTml7blgJnmiY3kvJrliqDovb1cclxuY29uc3QgQ29tcCA9IGR5bmFtaWMoaW1wb3J0KFwiLi4vY29tcG9uZW50cy9jb21wXCIpKTtcclxuXHJcbmNvbnN0IFRpdGxlID0gc3R5bGVkLmgxYFxyXG4gIGNvbG9yOiBncmVlbjtcclxuICBmb250LXNpemU6IDIzcHg7XHJcbmA7XHJcbmNvbnN0IGNvbG9yID0gXCJwaW5rXCI7XHJcbmNvbnN0IEEgPSAoeyByb3V0ZXIsIG5hbWUsIHRpbWUgfSkgPT4gKFxyXG4gIDw+XHJcbiAgICA8VGl0bGU+VGhpcyBpcyB0aXRsZSB7dGltZX08L1RpdGxlPlxyXG4gICAgPENvbXAgLz5cclxuICAgIDxMaW5rIGhyZWY9XCIjYWFhXCI+XHJcbiAgICAgIDxhIGNsYXNzTmFtZT1cImxpbmtcIj5cclxuICAgICAgICBBe3JvdXRlci5xdWVyeS5pZH0mbmJzcDt7bmFtZX1cclxuICAgICAgPC9hPlxyXG4gICAgPC9MaW5rPlxyXG4gICAgPHN0eWxlIGpzeD57YFxyXG4gICAgICBhIHtcclxuICAgICAgICBjb2xvcjogZ3JlZW47XHJcbiAgICAgIH1cclxuICAgICAgLmxpbmsge1xyXG4gICAgICAgIGNvbG9yOiAke2NvbG9yfTtcclxuICAgICAgfVxyXG4gICAgYH08L3N0eWxlPlxyXG4gIDwvPlxyXG4pO1xyXG4vLyBuZXh05Lya5Zyo6Lev55Sx5oiQ5Yqf5YiH5o2i5LmL5YmN5Y676LCD55So57uE5Lu25LiK55qEZ2V0aW5pdO+8jOaLv+WIsHJldHVybueahOWGheWuueS9nOS4unByb3Bz77yM5Y675riy5p+T6K+l57uE5Lu2XHJcbi8vIG5leHRqc+aYr+WcqOetieaVsOaNruWKoOi9veWujOS6huWGjeWOu+aYvuekuumhtemdolxyXG5BLmdldEluaXRpYWxQcm9wcyA9IGFzeW5jIGN0eCA9PiB7XHJcbiAgY29uc29sZS5sb2coXCIxMTExMTExMTExMTExMTExMVwiKTtcclxuICBjb25zdCBtb21lbnQgPSBhd2FpdCBpbXBvcnQoXCJtb21lbnRcIik7XHJcblxyXG4gIGNvbnN0IHByb21pc2UgPSBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcclxuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICByZXNvbHZlKHtcclxuICAgICAgICBuYW1lOiBcImFhYWFhYVwiLFxyXG4gICAgICAgIHRpbWU6IG1vbWVudC5kZWZhdWx0KERhdGUubm93KCkgLSA2MCAqIDEwMDApLmZyb21Ob3coKVxyXG4gICAgICB9KTtcclxuICAgIH0sIDEwMDApO1xyXG4gIH0pO1xyXG4gIHJldHVybiBhd2FpdCBwcm9taXNlO1xyXG4gIC8vICAgcmV0dXJuIHtcclxuICAvLyAgICAgbmFtZTogXCJhYWFhYWFhXCJcclxuICAvLyAgIH07XHJcbn07XHJcbmV4cG9ydCBkZWZhdWx0IHdpdGhSb3V0ZXIoQSk7XHJcbiJdfQ== */\\n/*@ sourceURL=D:\\\\\\\\GitHub\\\\\\\\nextjs-project\\\\\\\\pages\\\\\\\\a.js */\")));\n}; // next会在路由成功切换之前去调用组件上的getinit，拿到return的内容作为props，去渲染该组件\n// nextjs是在等数据加载完了再去显示页面\n\n\nA.getInitialProps = function _callee(ctx) {\n  var moment, promise;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log(\"11111111111111111\");\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(import(\"moment\"));\n\n        case 3:\n          moment = _context.sent;\n          promise = new _Promise(function (resolve) {\n            setTimeout(function () {\n              resolve({\n                name: \"aaaaaa\",\n                time: moment[\"default\"](_Date$now() - 60 * 1000).fromNow()\n              });\n            }, 1000);\n          });\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(promise);\n\n        case 7:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default withRouter(A);","map":{"version":3,"sources":["D:/GitHub/nextjs-project/pages/a.js"],"names":["withRouter","Link","styled","dynamic","Comp","Title","h1","color","A","router","name","time","query","id","getInitialProps","ctx","console","log","moment","promise","resolve","setTimeout","fromNow"],"mappings":";;;;;;AAAA;AACA,SAASA,UAAT,QAA2B,aAA3B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,cAApB,C,CAEA;AACA;;AACA,IAAMC,IAAI,GAAGD,OAAO;AAAA,SAAC,OAAO,oBAAP,CAAD;AAAA;AAAA;AAAA;AAAA,kCAAQ,oBAAR;AAAA;AAAA,cAAQ,oBAAR;AAAA;AAAA,EAApB;AAEA,IAAME,KAAK,GAAGH,MAAM,CAACI,EAAV;AAAA;AAAA;AAAA,mCAAX;AAIA,IAAMC,KAAK,GAAG,MAAd;;AACA,IAAMC,CAAC,GAAG,SAAJA,CAAI;AAAA,MAAGC,MAAH,QAAGA,MAAH;AAAA,MAAWC,IAAX,QAAWA,IAAX;AAAA,MAAiBC,IAAjB,QAAiBA,IAAjB;AAAA,SACR,4BACE,MAAC,KAAD,0BAAsBA,IAAtB,CADF,EAEE,MAAC,IAAD,OAFF,EAGE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC;AAAX,KACE;AAAA,uCAAa;AAAb,UACIF,MAAM,CAACG,KAAP,CAAaC,EADjB,UAC2BH,IAD3B,CADF,CAHF;AAAA;AAAA,sEAaeH,KAbf,46EADQ;AAAA,CAAV,C,CAmBA;AACA;;;AACAC,CAAC,CAACM,eAAF,GAAoB,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAClBC,UAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AADkB;AAAA,2CAEG,OAAO,QAAP,CAFH;;AAAA;AAEZC,UAAAA,MAFY;AAIZC,UAAAA,OAJY,GAIF,aAAY,UAAAC,OAAO,EAAI;AACrCC,YAAAA,UAAU,CAAC,YAAM;AACfD,cAAAA,OAAO,CAAC;AACNV,gBAAAA,IAAI,EAAE,QADA;AAENC,gBAAAA,IAAI,EAAEO,MAAM,WAAN,CAAe,cAAa,KAAK,IAAjC,EAAuCI,OAAvC;AAFA,eAAD,CAAP;AAID,aALS,EAKP,IALO,CAAV;AAMD,WAPe,CAJE;AAAA;AAAA,2CAYLH,OAZK;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB;;AAiBA,eAAenB,UAAU,CAACQ,CAAD,CAAzB","sourcesContent":["// import Comp from \"../components/comp\";\r\nimport { withRouter } from \"next/router\";\r\nimport Link from \"next/link\";\r\nimport styled from \"styled-components\";\r\nimport dynamic from \"next/dynamic\";\r\n\r\n// import moment from \"moment\";\r\n// 异步加载组件，等到真正执行渲的时候才会加载\r\nconst Comp = dynamic(import(\"../components/comp\"));\r\n\r\nconst Title = styled.h1`\r\n  color: green;\r\n  font-size: 23px;\r\n`;\r\nconst color = \"pink\";\r\nconst A = ({ router, name, time }) => (\r\n  <>\r\n    <Title>This is title {time}</Title>\r\n    <Comp />\r\n    <Link href=\"#aaa\">\r\n      <a className=\"link\">\r\n        A{router.query.id}&nbsp;{name}\r\n      </a>\r\n    </Link>\r\n    <style jsx>{`\r\n      a {\r\n        color: green;\r\n      }\r\n      .link {\r\n        color: ${color};\r\n      }\r\n    `}</style>\r\n  </>\r\n);\r\n// next会在路由成功切换之前去调用组件上的getinit，拿到return的内容作为props，去渲染该组件\r\n// nextjs是在等数据加载完了再去显示页面\r\nA.getInitialProps = async ctx => {\r\n  console.log(\"11111111111111111\");\r\n  const moment = await import(\"moment\");\r\n\r\n  const promise = new Promise(resolve => {\r\n    setTimeout(() => {\r\n      resolve({\r\n        name: \"aaaaaa\",\r\n        time: moment.default(Date.now() - 60 * 1000).fromNow()\r\n      });\r\n    }, 1000);\r\n  });\r\n  return await promise;\r\n  //   return {\r\n  //     name: \"aaaaaaa\"\r\n  //   };\r\n};\r\nexport default withRouter(A);\r\n"]},"metadata":{},"sourceType":"module"}