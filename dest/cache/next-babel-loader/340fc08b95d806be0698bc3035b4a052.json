{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect, useReducer, useLayoutEffect, useContext, useRef, memo, useMemo, useCallback } from \"react\";\nexport default class MyCount extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      count: 0\n    });\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      this.setState({\n        count: this.state.count + 1\n      });\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    this.interval ? clearInterval(this.interval) : null;\n  }\n\n  render() {\n    return __jsx(\"span\", null, this.state.count);\n  }\n\n}","map":{"version":3,"sources":["D:/GitHub/nextjs-project/pages/test/b.js"],"names":["React","useState","useEffect","useReducer","useLayoutEffect","useContext","useRef","memo","useMemo","useCallback","MyCount","Component","count","componentDidMount","interval","setInterval","setState","state","componentWillUnmount","clearInterval","render"],"mappings":";;;;AAAA,OAAOA,KAAP,IACEC,QADF,EAEEC,SAFF,EAGEC,UAHF,EAIEC,eAJF,EAKEC,UALF,EAMEC,MANF,EAOEC,IAPF,EAQEC,OARF,EASEC,WATF,QAUO,OAVP;AAWA,eAAe,MAAMC,OAAN,SAAsBV,KAAK,CAACW,SAA5B,CAAsC;AAAA;AAAA;;AAAA,mCAC3C;AACNC,MAAAA,KAAK,EAAE;AADD,KAD2C;AAAA;;AAInDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,QAAL,GAAgBC,WAAW,CAAC,MAAM;AAChC,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,KAAK,EAAE,KAAKK,KAAL,CAAWL,KAAX,GAAmB;AAA5B,OAAd;AACD,KAF0B,EAExB,IAFwB,CAA3B;AAGD;;AACDM,EAAAA,oBAAoB,GAAG;AACrB,SAAKJ,QAAL,GAAgBK,aAAa,CAAC,KAAKL,QAAN,CAA7B,GAA+C,IAA/C;AACD;;AACDM,EAAAA,MAAM,GAAG;AACP,WAAO,oBAAO,KAAKH,KAAL,CAAWL,KAAlB,CAAP;AACD;;AAdkD","sourcesContent":["import React, {\r\n  useState,\r\n  useEffect,\r\n  useReducer,\r\n  useLayoutEffect,\r\n  useContext,\r\n  useRef,\r\n  memo,\r\n  useMemo,\r\n  useCallback\r\n} from \"react\";\r\nexport default class MyCount extends React.Component {\r\n  state = {\r\n    count: 0\r\n  };\r\n  componentDidMount() {\r\n    this.interval = setInterval(() => {\r\n      this.setState({ count: this.state.count + 1 });\r\n    }, 1000);\r\n  }\r\n  componentWillUnmount() {\r\n    this.interval ? clearInterval(this.interval) : null;\r\n  }\r\n  render() {\r\n    return <span>{this.state.count}</span>;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}