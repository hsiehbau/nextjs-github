{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport ReduxThunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nconst initialState = {\n  count: 0\n};\nconst userInitialState = {\n  username: \"jjjjjj\"\n};\nconst ADD = \"ADD\";\n\nfunction counterReducer(state = initialState, action) {\n  console.log(state, action);\n\n  switch (action.type) {\n    case ADD:\n      return {\n        count: state.count + (action.num || 1)\n      };\n\n    default:\n      return state;\n  }\n}\n\nconst UPDATE_NAME = \"UPDATE_NAME\";\n\nfunction userReducer(state = userInitialState, action) {\n  switch (action.type) {\n    case UPDATE_NAME:\n      return _objectSpread({}, state, {\n        age: 18,\n        username: action.name\n      });\n\n    default:\n      return state;\n  }\n}\n\nconst allReducers = combineReducers({\n  counter: counterReducer,\n  user: userReducer\n}); // const store = createStore(\n//   allReducers,\n//   {\n//     counter: initialState,\n//     user: userInitialState\n//   },\n//   composeWithDevTools(applyMiddleware(ReduxThunk))\n// );\n\nexport function add(num) {\n  return {\n    type: ADD,\n    num\n  };\n}\n\nfunction addAsync(num) {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(add(num));\n    }, 1000);\n  };\n}\n\nstore.dispatch(add(3));\nstore.subscribe(() => {\n  console.log(\"lalalalall\", store.getState());\n});\nstore.dispatch(addAsync(5));\nstore.dispatch({\n  type: ADD\n});\nstore.dispatch({\n  type: UPDATE_NAME,\n  name: \"wx\"\n}); // 保证每次都是新的store\n\nexport default function initializeStore(state) {\n  const store = createStore(allReducers, Object.assign({}, {\n    counter: initialState,\n    user: userInitialState\n  }, // 存进来的state优先级最高放到后面\n  state), composeWithDevTools(applyMiddleware(ReduxThunk)));\n  return store;\n}","map":{"version":3,"sources":["D:/GitHub/nextjs-project/pages/store/store.js"],"names":["createStore","combineReducers","applyMiddleware","ReduxThunk","composeWithDevTools","initialState","count","userInitialState","username","ADD","counterReducer","state","action","console","log","type","num","UPDATE_NAME","userReducer","age","name","allReducers","counter","user","add","addAsync","dispatch","setTimeout","store","subscribe","getState","initializeStore","Object","assign"],"mappings":";;;;;;AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AADY,CAArB;AAGA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,QAAQ,EAAE;AADa,CAAzB;AAIA,MAAMC,GAAG,GAAG,KAAZ;;AACA,SAASC,cAAT,CAAwBC,KAAK,GAAGN,YAAhC,EAA8CO,MAA9C,EAAsD;AACpDC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAAmBC,MAAnB;;AACA,UAAQA,MAAM,CAACG,IAAf;AACE,SAAKN,GAAL;AACE,aAAO;AAAEH,QAAAA,KAAK,EAAEK,KAAK,CAACL,KAAN,IAAeM,MAAM,CAACI,GAAP,IAAc,CAA7B;AAAT,OAAP;;AACF;AACE,aAAOL,KAAP;AAJJ;AAMD;;AACD,MAAMM,WAAW,GAAG,aAApB;;AACA,SAASC,WAAT,CAAqBP,KAAK,GAAGJ,gBAA7B,EAA+CK,MAA/C,EAAuD;AACrD,UAAQA,MAAM,CAACG,IAAf;AACE,SAAKE,WAAL;AACE,+BACKN,KADL;AAEEQ,QAAAA,GAAG,EAAE,EAFP;AAGEX,QAAAA,QAAQ,EAAEI,MAAM,CAACQ;AAHnB;;AAKF;AACE,aAAOT,KAAP;AARJ;AAUD;;AAED,MAAMU,WAAW,GAAGpB,eAAe,CAAC;AAClCqB,EAAAA,OAAO,EAAEZ,cADyB;AAElCa,EAAAA,IAAI,EAAEL;AAF4B,CAAD,CAAnC,C,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASM,GAAT,CAAaR,GAAb,EAAkB;AACvB,SAAO;AACLD,IAAAA,IAAI,EAAEN,GADD;AAELO,IAAAA;AAFK,GAAP;AAID;;AAED,SAASS,QAAT,CAAkBT,GAAlB,EAAuB;AACrB,SAAOU,QAAQ,IAAI;AACjBC,IAAAA,UAAU,CAAC,MAAM;AACfD,MAAAA,QAAQ,CAACF,GAAG,CAACR,GAAD,CAAJ,CAAR;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GAJD;AAKD;;AACDY,KAAK,CAACF,QAAN,CAAeF,GAAG,CAAC,CAAD,CAAlB;AAEAI,KAAK,CAACC,SAAN,CAAgB,MAAM;AACpBhB,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0Bc,KAAK,CAACE,QAAN,EAA1B;AACD,CAFD;AAGAF,KAAK,CAACF,QAAN,CAAeD,QAAQ,CAAC,CAAD,CAAvB;AAEAG,KAAK,CAACF,QAAN,CAAe;AAAEX,EAAAA,IAAI,EAAEN;AAAR,CAAf;AACAmB,KAAK,CAACF,QAAN,CAAe;AAAEX,EAAAA,IAAI,EAAEE,WAAR;AAAqBG,EAAAA,IAAI,EAAE;AAA3B,CAAf,E,CACA;;AACA,eAAe,SAASW,eAAT,CAAyBpB,KAAzB,EAAgC;AAC7C,QAAMiB,KAAK,GAAG5B,WAAW,CACvBqB,WADuB,EAEvBW,MAAM,CAACC,MAAP,CACE,EADF,EAEE;AACEX,IAAAA,OAAO,EAAEjB,YADX;AAEEkB,IAAAA,IAAI,EAAEhB;AAFR,GAFF,EAME;AACAI,EAAAA,KAPF,CAFuB,EAWvBP,mBAAmB,CAACF,eAAe,CAACC,UAAD,CAAhB,CAXI,CAAzB;AAaA,SAAOyB,KAAP;AACD","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport ReduxThunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nconst initialState = {\r\n  count: 0\r\n};\r\nconst userInitialState = {\r\n  username: \"jjjjjj\"\r\n};\r\n\r\nconst ADD = \"ADD\";\r\nfunction counterReducer(state = initialState, action) {\r\n  console.log(state, action);\r\n  switch (action.type) {\r\n    case ADD:\r\n      return { count: state.count + (action.num || 1) };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nconst UPDATE_NAME = \"UPDATE_NAME\";\r\nfunction userReducer(state = userInitialState, action) {\r\n  switch (action.type) {\r\n    case UPDATE_NAME:\r\n      return {\r\n        ...state,\r\n        age: 18,\r\n        username: action.name\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst allReducers = combineReducers({\r\n  counter: counterReducer,\r\n  user: userReducer\r\n});\r\n\r\n// const store = createStore(\r\n//   allReducers,\r\n//   {\r\n//     counter: initialState,\r\n//     user: userInitialState\r\n//   },\r\n//   composeWithDevTools(applyMiddleware(ReduxThunk))\r\n// );\r\n\r\nexport function add(num) {\r\n  return {\r\n    type: ADD,\r\n    num\r\n  };\r\n}\r\n\r\nfunction addAsync(num) {\r\n  return dispatch => {\r\n    setTimeout(() => {\r\n      dispatch(add(num));\r\n    }, 1000);\r\n  };\r\n}\r\nstore.dispatch(add(3));\r\n\r\nstore.subscribe(() => {\r\n  console.log(\"lalalalall\", store.getState());\r\n});\r\nstore.dispatch(addAsync(5));\r\n\r\nstore.dispatch({ type: ADD });\r\nstore.dispatch({ type: UPDATE_NAME, name: \"wx\" });\r\n// 保证每次都是新的store\r\nexport default function initializeStore(state) {\r\n  const store = createStore(\r\n    allReducers,\r\n    Object.assign(\r\n      {},\r\n      {\r\n        counter: initialState,\r\n        user: userInitialState\r\n      },\r\n      // 存进来的state优先级最高放到后面\r\n      state\r\n    ),\r\n    composeWithDevTools(applyMiddleware(ReduxThunk))\r\n  );\r\n  return store;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}