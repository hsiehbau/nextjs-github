{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect, useReducer, useLayoutEffect, useContext, useRef, memo, useMemo, useCallback } from \"react\";\n\nfunction MyCountFunc() {\n  const {\n    0: count,\n    1: setCount\n  } = useState(0);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCount(c => c + 1);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  return __jsx(\"span\", null);\n}\n\nexport default MyCountFunc; // export default class MyCount extends React.Component {\n//   state = {\n//     count: 0\n//   };\n//   componentDidMount() {\n//     this.interval = setInterval(() => {\n//       this.setState({ count: this.state.count + 1 });\n//     }, 1000);\n//   }\n//   componentWillUnmount() {\n//     this.interval ? clearInterval(this.interval) : null;\n//   }\n//   render() {\n//     return <span>{count}</span>;\n//   }\n// }","map":{"version":3,"sources":["D:/GitHub/nextjs-project/pages/test/b.js"],"names":["React","useState","useEffect","useReducer","useLayoutEffect","useContext","useRef","memo","useMemo","useCallback","MyCountFunc","count","setCount","interval","setInterval","c","clearInterval"],"mappings":";AAAA,OAAOA,KAAP,IACEC,QADF,EAEEC,SAFF,EAGEC,UAHF,EAIEC,eAJF,EAKEC,UALF,EAMEC,MANF,EAOEC,IAPF,EAQEC,OARF,EASEC,WATF,QAUO,OAVP;;AAWA,SAASC,WAAT,GAAuB;AACrB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBX,QAAQ,CAAC,CAAD,CAAlC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,QAAQ,GAAGC,WAAW,CAAC,MAAM;AACjCF,MAAAA,QAAQ,CAACG,CAAC,IAAIA,CAAC,GAAG,CAAV,CAAR;AACD,KAF2B,EAEzB,IAFyB,CAA5B;AAGA,WAAO,MAAMC,aAAa,CAACH,QAAD,CAA1B;AACD,GALQ,EAKN,EALM,CAAT;AAMA,SAAO,mBAAP;AACD;;AACD,eAAeH,WAAf,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, {\r\n  useState,\r\n  useEffect,\r\n  useReducer,\r\n  useLayoutEffect,\r\n  useContext,\r\n  useRef,\r\n  memo,\r\n  useMemo,\r\n  useCallback\r\n} from \"react\";\r\nfunction MyCountFunc() {\r\n  const [count, setCount] = useState(0);\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCount(c => c + 1);\r\n    }, 1000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n  return <span></span>;\r\n}\r\nexport default MyCountFunc;\r\n// export default class MyCount extends React.Component {\r\n//   state = {\r\n//     count: 0\r\n//   };\r\n//   componentDidMount() {\r\n//     this.interval = setInterval(() => {\r\n//       this.setState({ count: this.state.count + 1 });\r\n//     }, 1000);\r\n//   }\r\n//   componentWillUnmount() {\r\n//     this.interval ? clearInterval(this.interval) : null;\r\n//   }\r\n//   render() {\r\n//     return <span>{count}</span>;\r\n//   }\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}