{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useReducer, useLayoutEffect, useContext, useRef, memo, useMemo, useCallback } from \"react\";\n\nfunction countReducer(state, action) {\n  switch (action.type) {\n    case \"add\":\n      return state + 1;\n\n    case \"minus\":\n      return state - 1;\n\n    default:\n      return state;\n  }\n}\n\nfunction MyCountFunc() {\n  //   const [count, setCount] = useState(0);\n  var _useReducer = useReducer(countReducer, 0),\n      count = _useReducer[0],\n      dispatchCount = _useReducer[1];\n\n  useEffect(function () {\n    var interval = setInterval(function () {\n      // 拿到的值永远是最新的值，避免闭包陷阱\n      //   setCount(c => c + 1);\n      dispatchCount({\n        type: \"add\"\n      });\n    }, 1000);\n    return function () {\n      return clearInterval(interval);\n    };\n  }, []);\n  return __jsx(\"span\", null, count);\n}\n\nexport default MyCountFunc;\n\nvar MyCount = /*#__PURE__*/function (_React$Component) {\n  _inherits(MyCount, _React$Component);\n\n  function MyCount() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MyCount);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MyCount)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      count: 0\n    });\n\n    return _this;\n  }\n\n  _createClass(MyCount, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.interval = setInterval(function () {\n        _this2.setState({\n          count: _this2.state.count + 1\n        });\n      }, 1000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.interval ? clearInterval(this.interval) : null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"span\", null, count);\n    }\n  }]);\n\n  return MyCount;\n}(React.Component);","map":{"version":3,"sources":["D:/GitHub/nextjs-project/pages/test/b.js"],"names":["React","useState","useEffect","useReducer","useLayoutEffect","useContext","useRef","memo","useMemo","useCallback","countReducer","state","action","type","MyCountFunc","count","dispatchCount","interval","setInterval","clearInterval","MyCount","setState","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IACEC,QADF,EAEEC,SAFF,EAGEC,UAHF,EAIEC,eAJF,EAKEC,UALF,EAMEC,MANF,EAOEC,IAPF,EAQEC,OARF,EASEC,WATF,QAUO,OAVP;;AAYA,SAASC,YAAT,CAAsBC,KAAtB,EAA6BC,MAA7B,EAAqC;AACnC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,KAAL;AACE,aAAOF,KAAK,GAAG,CAAf;;AACF,SAAK,OAAL;AACE,aAAOA,KAAK,GAAG,CAAf;;AACF;AACE,aAAOA,KAAP;AANJ;AAQD;;AAED,SAASG,WAAT,GAAuB;AACrB;AADqB,oBAEUX,UAAU,CAACO,YAAD,EAAe,CAAf,CAFpB;AAAA,MAEdK,KAFc;AAAA,MAEPC,aAFO;;AAIrBd,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMe,QAAQ,GAAGC,WAAW,CAAC,YAAM;AACjC;AACA;AACAF,MAAAA,aAAa,CAAC;AAAEH,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAb;AACD,KAJ2B,EAIzB,IAJyB,CAA5B;AAKA,WAAO;AAAA,aAAMM,aAAa,CAACF,QAAD,CAAnB;AAAA,KAAP;AACD,GAPQ,EAON,EAPM,CAAT;AASA,SAAO,oBAAOF,KAAP,CAAP;AACD;;AACD,eAAeD,WAAf;;IACMM,O;;;;;;;;;;;;;;;;4DACI;AACNL,MAAAA,KAAK,EAAE;AADD,K;;;;;;;wCAGY;AAAA;;AAClB,WAAKE,QAAL,GAAgBC,WAAW,CAAC,YAAM;AAChC,QAAA,MAAI,CAACG,QAAL,CAAc;AAAEN,UAAAA,KAAK,EAAE,MAAI,CAACJ,KAAL,CAAWI,KAAX,GAAmB;AAA5B,SAAd;AACD,OAF0B,EAExB,IAFwB,CAA3B;AAGD;;;2CACsB;AACrB,WAAKE,QAAL,GAAgBE,aAAa,CAAC,KAAKF,QAAN,CAA7B,GAA+C,IAA/C;AACD;;;6BACQ;AACP,aAAO,oBAAOF,KAAP,CAAP;AACD;;;;EAdmBf,KAAK,CAACsB,S","sourcesContent":["import React, {\r\n  useState,\r\n  useEffect,\r\n  useReducer,\r\n  useLayoutEffect,\r\n  useContext,\r\n  useRef,\r\n  memo,\r\n  useMemo,\r\n  useCallback\r\n} from \"react\";\r\n\r\nfunction countReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"add\":\r\n      return state + 1;\r\n    case \"minus\":\r\n      return state - 1;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction MyCountFunc() {\r\n  //   const [count, setCount] = useState(0);\r\n  const [count, dispatchCount] = useReducer(countReducer, 0);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      // 拿到的值永远是最新的值，避免闭包陷阱\r\n      //   setCount(c => c + 1);\r\n      dispatchCount({ type: \"add\" });\r\n    }, 1000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return <span>{count}</span>;\r\n}\r\nexport default MyCountFunc;\r\nclass MyCount extends React.Component {\r\n  state = {\r\n    count: 0\r\n  };\r\n  componentDidMount() {\r\n    this.interval = setInterval(() => {\r\n      this.setState({ count: this.state.count + 1 });\r\n    }, 1000);\r\n  }\r\n  componentWillUnmount() {\r\n    this.interval ? clearInterval(this.interval) : null;\r\n  }\r\n  render() {\r\n    return <span>{count}</span>;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}